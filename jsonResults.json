{
  "collection": {
    "_": {
      "postman_id": "8223a975-cd07-41bb-ae5c-beb077e565ff"
    },
    "item": [
      {
        "id": "cc6dca65-ec0a-44db-b5d9-482045e91757",
        "name": "N1",
        "item": [
          {
            "id": "2d410c14-fe4a-465f-9c6d-16bf5dc7f51e",
            "name": "/Payment",
            "request": {
              "description": {
                "content": "This operation creates a Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"account\":{\"id\":\"15463151\"},\"paymentMethod\":{},\"totalAmount\":{}}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0b98a4e4-ad66-4263-879f-57ee399abca5",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "if (Array.isArray(jsonData)) { ",
                    "  ",
                    "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                    "  ",
                    "",
                    "}",
                    "",
                    "pm.test(\"Status code is 201\", function () {",
                    "  pm.response.to.have.status(201);",
                    "});",
                    "",
                    "var instance = pm.response.json();",
                    "var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "",
                    "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "",
                    "",
                    "",
                    "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "",
                    "pm.globals.set('HREFPA01', instance['href']);",
                    "pm.globals.set('IDPA01', instance['id']);",
                    "",
                    "pm.test('Body includes value held on href', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['href']);",
                    "});",
                    "pm.test('Body includes value held on id', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['id']);",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "84f77c92-fba6-4a8c-895d-8a1dada60d72"
                }
              }
            ]
          },
          {
            "id": "26581380-7f27-4b4d-ae6c-5807e31e85f0",
            "name": "/Payment",
            "request": {
              "description": {
                "content": "This operation creates another Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account\": {\n    \"id\": \"15463151\"\n  },\n  \"paymentMethod\": {},\n  \"totalAmount\": {}\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1585f5c7-fa07-4ce2-a0b6-15ba8746d24e",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "if (Array.isArray(jsonData)) { ",
                    "  ",
                    "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                    "  ",
                    "",
                    "}",
                    "",
                    "pm.test(\"Status code is 201\", function () {",
                    "  pm.response.to.have.status(201);",
                    "});",
                    "",
                    "var instance = pm.response.json();",
                    "var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "",
                    "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "",
                    "",
                    "",
                    "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "",
                    "pm.globals.set('HREFPA02', instance['href']);",
                    "pm.globals.set('IDPA02', instance['id']);",
                    "",
                    "pm.test('Body includes value held on href', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['href']);",
                    "});",
                    "pm.test('Body includes value held on id', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['id']);",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "61359896-2740-4e8e-86e7-5c41bac74c3e"
                }
              }
            ]
          },
          {
            "id": "583d5ddc-7e0f-4fa3-8b65-1bbf0b9a889a",
            "name": "/Payment",
            "request": {
              "description": {
                "content": "This operation search for the created Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "eff13243-142f-41c4-b24c-05dc3a542b11",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }  ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }",
                    "   ",
                    "  }",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "62922678-ef6a-4e89-a2f7-2e2c6c0a45e8"
                }
              }
            ]
          },
          {
            "id": "d4256e26-8c1f-4ebc-88e2-c2516204cd4b",
            "name": "/Payment/{{IDPA01}}",
            "request": {
              "description": {
                "content": "This operation search for one of the created Payment",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "{{IDPA01}}"
                ],
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4911b136-3e1a-4e5b-b211-365f210ab6aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('IDPA02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('IDPA02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "bf4051d4-c9f0-4a68-a396-998216a9aa22"
                }
              }
            ]
          },
          {
            "id": "3e954aa7-bafc-4f93-bd6c-2094f417d521",
            "name": "/Payment/{{IDPA02}}",
            "request": {
              "description": {
                "content": "This operation search for the other one of the created Payment",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "{{IDPA02}}"
                ],
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b9df3c1b-b42a-41e3-9bea-eba8d2fb0342",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('IDPA01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('IDPA01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "774dd9c5-6895-4c2d-b7be-51b9e8c7bfbc"
                }
              }
            ]
          }
        ],
        "event": [],
        "protocolProfileBehavior": {}
      },
      {
        "id": "5a69257d-75a2-4f04-873c-db3c6efb64e0",
        "name": "N2",
        "item": [
          {
            "id": "a2e68b94-3f92-490d-9cc6-01f71d78093c",
            "name": "/Payment?fields=href",
            "request": {
              "description": {
                "content": "This operation filter a Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [
                  {
                    "key": "fields",
                    "value": "href"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b3c9c2c5-e5ed-4ab1-b948-918fb8c48ae6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d399a25-2cb4-41c3-b889-b0883940a0dc"
                }
              }
            ]
          },
          {
            "id": "23e65ae9-c4f3-496b-9737-0637705d2bbc",
            "name": "/Payment?href={{HREFPA01}}",
            "request": {
              "description": {
                "content": "This operation filter a Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [
                  {
                    "key": "href",
                    "value": "{{HREFPA01}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d5bc736d-13fc-498e-acf8-140bbf132cd5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('IDPA02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('IDPA02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "01edfd10-e92e-4709-b660-5a0527035023"
                }
              }
            ]
          },
          {
            "id": "5881b31a-5dc2-474c-8e4b-62db08442b74",
            "name": "/Payment?href={{HREFPA02}}",
            "request": {
              "description": {
                "content": "This operation filter a Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [
                  {
                    "key": "href",
                    "value": "{{HREFPA02}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6def80ac-42e8-4c85-a345-101118d7a4f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('IDPA01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('IDPA01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "08df13c2-a5ad-4a3d-82e5-c720f8096610"
                }
              }
            ]
          },
          {
            "id": "bbabc159-1c9f-4cb9-bb58-d7f34336b2fe",
            "name": "/Payment?fields=id",
            "request": {
              "description": {
                "content": "This operation filter a Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [
                  {
                    "key": "fields",
                    "value": "id"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5ac2bca1-bb85-4172-9a38-25b374927756",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3af65554-25cf-40b7-9ea5-54212df74bb6"
                }
              }
            ]
          },
          {
            "id": "ae7fb84e-e04c-4803-9757-c212a07a30e5",
            "name": "/Payment?id={{IDPA01}}",
            "request": {
              "description": {
                "content": "This operation filter a Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{IDPA01}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "adf0452d-4158-4d89-8bf6-b55f726990a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('IDPA02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('IDPA02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "43c6809f-3358-4a81-83c5-81763af5cdfb"
                }
              }
            ]
          },
          {
            "id": "c96e3804-7088-4594-bf43-1eec4ec57888",
            "name": "/Payment?id={{IDPA02}}",
            "request": {
              "description": {
                "content": "This operation filter a Payment",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{IDPA02}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6d3fc6a7-9c67-40bf-83c0-b80ddda8cb87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('IDPA01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                    "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                    "            pm.test('IDPA01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "5b2334da-04c0-4ae4-8e95-5dba47955fbe"
                }
              }
            ]
          }
        ],
        "event": [],
        "protocolProfileBehavior": {}
      },
      {
        "id": "6568d005-bf6a-44ad-98cd-cd831459a318",
        "name": "E1",
        "item": [
          {
            "id": "c08003c1-b1ce-44f7-b156-af22ffd1e5b6",
            "name": "/Payment/404ID",
            "request": {
              "description": {
                "content": "This operation search for one of the created Payment",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "45d7aa75-8458-4b33-b659-c3c1d6278c4c"
                ],
                "host": [
                  "{{Payment}}payment"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "83a03ba9-361d-4fe9-92c8-f0aae8587a4b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 404\", function () {",
                    "    pm.response.to.have.status(404);",
                    "});",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "be6e7b5c-a932-451e-87e0-233af348607d"
                }
              }
            ]
          }
        ],
        "event": [],
        "protocolProfileBehavior": {}
      }
    ],
    "event": [],
    "protocolProfileBehavior": {},
    "variable": [],
    "info": {
      "_postman_id": "8223a975-cd07-41bb-ae5c-beb077e565ff",
      "name": "CTK-Payment-4.0.0",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2020-07-07T14:17:10.805Z",
      "postman_exported_using": "Postman/7.27.1"
    },
    "id": "da32588a-3916-4d78-a546-7623e391f650",
    "name": "TMForumv4",
    "values": [
      {
        "type": "any",
        "value": " http://localhost:8676/paymentManagement/v4/",
        "key": "Payment"
      }
    ]
  },
  "globals": {
    "id": "6c12f999-0534-47a0-bde4-e4a7c277c198",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe",
        "key": "HREFPA01"
      },
      {
        "type": "any",
        "value": "0f74aa54-6a42-411e-a823-205f7368c3fe",
        "key": "IDPA01"
      },
      {
        "type": "any",
        "value": "http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
        "key": "HREFPA02"
      },
      {
        "type": "any",
        "value": "d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
        "key": "IDPA02"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 111,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 26.333333333333332,
      "responseMin": 12,
      "responseMax": 98,
      "responseSd": 22.20110107379562,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1607697054974,
      "completed": 1607697056462
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 12,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bc64d0ea-35fe-4811-be91-39549bf067ef",
          "httpRequestId": "c9a64cb2-c3ec-4c61-811c-ae39ff5b333b"
        },
        "item": {
          "id": "2d410c14-fe4a-465f-9c6d-16bf5dc7f51e",
          "name": "/Payment",
          "request": {
            "description": {
              "content": "This operation creates a Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"account\":{\"id\":\"15463151\"},\"paymentMethod\":{},\"totalAmount\":{}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0b98a4e4-ad66-4263-879f-57ee399abca5",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "if (Array.isArray(jsonData)) { ",
                  "  ",
                  "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                  "  ",
                  "",
                  "}",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "var instance = pm.response.json();",
                  "var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "",
                  "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "",
                  "",
                  "",
                  "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "",
                  "pm.globals.set('HREFPA01', instance['href']);",
                  "pm.globals.set('IDPA01', instance['id']);",
                  "",
                  "pm.test('Body includes value held on href', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['href']);",
                  "});",
                  "pm.test('Body includes value held on id', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['id']);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "84f77c92-fba6-4a8c-895d-8a1dada60d72"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation creates a Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3fcc1c59-d2a2-4004-b847-b5bb8b345881",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 65,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"account\":{\"id\":\"15463151\"},\"paymentMethod\":{},\"totalAmount\":{}}"
          }
        },
        "response": {
          "id": "9b47034f-d540-4fd5-857e-b9972d78d66b",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Location",
              "value": "http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:54 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "313"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 98,
          "responseSize": 313
        },
        "id": "2d410c14-fe4a-465f-9c6d-16bf5dc7f51e",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5851c968-a954-47c2-bf26-44a5f5a44a7c",
          "length": 12,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0da45086-e0dc-4540-bf73-b7d54fe2e157"
        },
        "item": {
          "id": "26581380-7f27-4b4d-ae6c-5807e31e85f0",
          "name": "/Payment",
          "request": {
            "description": {
              "content": "This operation creates another Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": {\n    \"id\": \"15463151\"\n  },\n  \"paymentMethod\": {},\n  \"totalAmount\": {}\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1585f5c7-fa07-4ce2-a0b6-15ba8746d24e",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "if (Array.isArray(jsonData)) { ",
                  "  ",
                  "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                  "  ",
                  "",
                  "}",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "var instance = pm.response.json();",
                  "var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "",
                  "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "",
                  "",
                  "",
                  "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "",
                  "pm.globals.set('HREFPA02', instance['href']);",
                  "pm.globals.set('IDPA02', instance['id']);",
                  "",
                  "pm.test('Body includes value held on href', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['href']);",
                  "});",
                  "pm.test('Body includes value held on id', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['id']);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "61359896-2740-4e8e-86e7-5c41bac74c3e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation creates another Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "144fa45f-0672-4ff5-8c7f-793113515be0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 87,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"account\": {\n    \"id\": \"15463151\"\n  },\n  \"paymentMethod\": {},\n  \"totalAmount\": {}\n}"
          }
        },
        "response": {
          "id": "dbf0cbcc-8b16-4c2c-b7ec-ac30da736fe1",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Location",
              "value": "http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "313"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 25,
          "responseSize": 313
        },
        "id": "26581380-7f27-4b4d-ae6c-5807e31e85f0",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8f4e340c-99d1-4bd6-918a-2fa6f47a386b",
          "length": 12,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1e5ab547-8ec5-4537-b55d-561bc20a158e"
        },
        "item": {
          "id": "583d5ddc-7e0f-4fa3-8b65-1bbf0b9a889a",
          "name": "/Payment",
          "request": {
            "description": {
              "content": "This operation search for the created Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eff13243-142f-41c4-b24c-05dc3a542b11",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }  ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }",
                  "   ",
                  "  }",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "62922678-ef6a-4e89-a2f7-2e2c6c0a45e8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation search for the created Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1acffee4-82a6-4c23-8813-e922f100eda8",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d58371d8-22e1-4cd1-8083-c1998017d0b7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Result-Count",
              "value": "9"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "2827"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              56,
              55,
              54,
              55,
              101,
              100,
              45,
              97,
              50,
              98,
              48,
              45,
              52,
              49,
              54,
              55,
              45,
              97,
              48,
              102,
              99,
              45,
              55,
              100,
              101,
              53,
              100,
              100,
              48,
              56,
              54,
              101,
              100,
              55,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              54,
              55,
              56,
              55,
              54,
              55,
              101,
              100,
              45,
              97,
              50,
              98,
              48,
              45,
              52,
              49,
              54,
              55,
              45,
              97,
              48,
              102,
              99,
              45,
              55,
              100,
              101,
              53,
              100,
              100,
              48,
              56,
              54,
              101,
              100,
              55,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              99,
              49,
              50,
              48,
              50,
              51,
              51,
              50,
              45,
              101,
              55,
              102,
              56,
              45,
              52,
              102,
              55,
              101,
              45,
              56,
              56,
              56,
              56,
              45,
              53,
              52,
              100,
              99,
              53,
              97,
              49,
              55,
              53,
              52,
              54,
              102,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              99,
              49,
              50,
              48,
              50,
              51,
              51,
              50,
              45,
              101,
              55,
              102,
              56,
              45,
              52,
              102,
              55,
              101,
              45,
              56,
              56,
              56,
              56,
              45,
              53,
              52,
              100,
              99,
              53,
              97,
              49,
              55,
              53,
              52,
              54,
              102,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              102,
              57,
              53,
              57,
              100,
              52,
              45,
              98,
              54,
              101,
              99,
              45,
              52,
              53,
              48,
              100,
              45,
              56,
              50,
              51,
              98,
              45,
              97,
              97,
              50,
              52,
              99,
              100,
              52,
              99,
              54,
              98,
              53,
              54,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              53,
              54,
              102,
              57,
              53,
              57,
              100,
              52,
              45,
              98,
              54,
              101,
              99,
              45,
              52,
              53,
              48,
              100,
              45,
              56,
              50,
              51,
              98,
              45,
              97,
              97,
              50,
              52,
              99,
              100,
              52,
              99,
              54,
              98,
              53,
              54,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              52,
              54,
              56,
              49,
              56,
              48,
              50,
              45,
              56,
              102,
              53,
              49,
              45,
              52,
              98,
              100,
              49,
              45,
              57,
              97,
              102,
              100,
              45,
              57,
              55,
              97,
              57,
              49,
              56,
              49,
              50,
              51,
              53,
              54,
              51,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              97,
              52,
              54,
              56,
              49,
              56,
              48,
              50,
              45,
              56,
              102,
              53,
              49,
              45,
              52,
              98,
              100,
              49,
              45,
              57,
              97,
              102,
              100,
              45,
              57,
              55,
              97,
              57,
              49,
              56,
              49,
              50,
              51,
              53,
              54,
              51,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              49,
              48,
              99,
              101,
              51,
              48,
              98,
              45,
              50,
              49,
              100,
              52,
              45,
              52,
              48,
              52,
              99,
              45,
              98,
              52,
              54,
              102,
              45,
              52,
              57,
              51,
              56,
              54,
              50,
              56,
              54,
              54,
              53,
              100,
              52,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              49,
              48,
              99,
              101,
              51,
              48,
              98,
              45,
              50,
              49,
              100,
              52,
              45,
              52,
              48,
              52,
              99,
              45,
              98,
              52,
              54,
              102,
              45,
              52,
              57,
              51,
              56,
              54,
              50,
              56,
              54,
              54,
              53,
              100,
              52,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              51,
              101,
              52,
              53,
              50,
              101,
              98,
              48,
              45,
              56,
              49,
              102,
              99,
              45,
              52,
              49,
              55,
              52,
              45,
              97,
              97,
              56,
              55,
              45,
              52,
              99,
              54,
              55,
              98,
              99,
              51,
              49,
              98,
              51,
              101,
              49,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              51,
              101,
              52,
              53,
              50,
              101,
              98,
              48,
              45,
              56,
              49,
              102,
              99,
              45,
              52,
              49,
              55,
              52,
              45,
              97,
              97,
              56,
              55,
              45,
              52,
              99,
              54,
              55,
              98,
              99,
              51,
              49,
              98,
              51,
              101,
              49,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              55,
              97,
              55,
              52,
              54,
              52,
              102,
              45,
              54,
              56,
              102,
              99,
              45,
              52,
              52,
              101,
              98,
              45,
              57,
              102,
              55,
              100,
              45,
              55,
              57,
              48,
              97,
              54,
              101,
              100,
              54,
              52,
              97,
              101,
              97,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              49,
              55,
              97,
              55,
              52,
              54,
              52,
              102,
              45,
              54,
              56,
              102,
              99,
              45,
              52,
              52,
              101,
              98,
              45,
              57,
              102,
              55,
              100,
              45,
              55,
              57,
              48,
              97,
              54,
              101,
              100,
              54,
              52,
              97,
              101,
              97,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              44,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 2827
        },
        "id": "583d5ddc-7e0f-4fa3-8b65-1bbf0b9a889a",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          },
          {
            "assertion": "id is 0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          },
          {
            "assertion": "id is d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "70e7f49a-c85b-4eb2-881b-e87a5162719f",
          "length": 12,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "908e6075-b51e-45c3-a150-e40b5cf66370"
        },
        "item": {
          "id": "d4256e26-8c1f-4ebc-88e2-c2516204cd4b",
          "name": "/Payment/{{IDPA01}}",
          "request": {
            "description": {
              "content": "This operation search for one of the created Payment",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "{{IDPA01}}"
              ],
              "host": [
                "{{Payment}}payment"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4911b136-3e1a-4e5b-b211-365f210ab6aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('IDPA02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('IDPA02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "bf4051d4-c9f0-4a68-a396-998216a9aa22"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation search for one of the created Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment",
              "0f74aa54-6a42-411e-a823-205f7368c3fe"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6234826e-aa29-4ad0-b0f9-9f849b6f145b",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "598ed717-4ba0-49e9-a876-2af64160418d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Location",
              "value": "http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "313"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 313
        },
        "id": "d4256e26-8c1f-4ebc-88e2-c2516204cd4b",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          },
          {
            "assertion": "id is 0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c844cd1-e322-4134-9755-eec58ab25ce5",
          "length": 12,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5f68457e-4cc8-4c10-a409-1b4f3cf8e5d8"
        },
        "item": {
          "id": "3e954aa7-bafc-4f93-bd6c-2094f417d521",
          "name": "/Payment/{{IDPA02}}",
          "request": {
            "description": {
              "content": "This operation search for the other one of the created Payment",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "{{IDPA02}}"
              ],
              "host": [
                "{{Payment}}payment"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b9df3c1b-b42a-41e3-9bea-eba8d2fb0342",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('IDPA01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('IDPA01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "774dd9c5-6895-4c2d-b7be-51b9e8c7bfbc"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation search for the other one of the created Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment",
              "d3bdc29c-7198-412f-bfce-1b3f0b6a69c0"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "582b3750-b60a-4894-a7fb-5a79df07414f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "9831e943-a0bf-42cd-913e-801e327af76a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Location",
              "value": "http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "313"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 313
        },
        "id": "3e954aa7-bafc-4f93-bd6c-2094f417d521",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          },
          {
            "assertion": "id is d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3c6e0fb8-1c4b-4150-8787-e0151694c1a5",
          "length": 12,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec7bc880-cf73-444e-8a3e-6e01f5926e9c"
        },
        "item": {
          "id": "a2e68b94-3f92-490d-9cc6-01f71d78093c",
          "name": "/Payment?fields=href",
          "request": {
            "description": {
              "content": "This operation filter a Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [
                {
                  "key": "fields",
                  "value": "href"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3c9c2c5-e5ed-4ab1-b948-918fb8c48ae6",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "3d399a25-2cb4-41c3-b889-b0883940a0dc"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "fields",
                "value": "href"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2070cd42-cdc2-4c11-a369-3e35dd85daca",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8571d5bd-d170-4137-a477-12bcc52f3760",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Result-Count",
              "value": "9"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "1288"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              56,
              55,
              54,
              55,
              101,
              100,
              45,
              97,
              50,
              98,
              48,
              45,
              52,
              49,
              54,
              55,
              45,
              97,
              48,
              102,
              99,
              45,
              55,
              100,
              101,
              53,
              100,
              100,
              48,
              56,
              54,
              101,
              100,
              55,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              54,
              55,
              56,
              55,
              54,
              55,
              101,
              100,
              45,
              97,
              50,
              98,
              48,
              45,
              52,
              49,
              54,
              55,
              45,
              97,
              48,
              102,
              99,
              45,
              55,
              100,
              101,
              53,
              100,
              100,
              48,
              56,
              54,
              101,
              100,
              55,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              99,
              49,
              50,
              48,
              50,
              51,
              51,
              50,
              45,
              101,
              55,
              102,
              56,
              45,
              52,
              102,
              55,
              101,
              45,
              56,
              56,
              56,
              56,
              45,
              53,
              52,
              100,
              99,
              53,
              97,
              49,
              55,
              53,
              52,
              54,
              102,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              99,
              49,
              50,
              48,
              50,
              51,
              51,
              50,
              45,
              101,
              55,
              102,
              56,
              45,
              52,
              102,
              55,
              101,
              45,
              56,
              56,
              56,
              56,
              45,
              53,
              52,
              100,
              99,
              53,
              97,
              49,
              55,
              53,
              52,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              102,
              57,
              53,
              57,
              100,
              52,
              45,
              98,
              54,
              101,
              99,
              45,
              52,
              53,
              48,
              100,
              45,
              56,
              50,
              51,
              98,
              45,
              97,
              97,
              50,
              52,
              99,
              100,
              52,
              99,
              54,
              98,
              53,
              54,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              53,
              54,
              102,
              57,
              53,
              57,
              100,
              52,
              45,
              98,
              54,
              101,
              99,
              45,
              52,
              53,
              48,
              100,
              45,
              56,
              50,
              51,
              98,
              45,
              97,
              97,
              50,
              52,
              99,
              100,
              52,
              99,
              54,
              98,
              53,
              54,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              52,
              54,
              56,
              49,
              56,
              48,
              50,
              45,
              56,
              102,
              53,
              49,
              45,
              52,
              98,
              100,
              49,
              45,
              57,
              97,
              102,
              100,
              45,
              57,
              55,
              97,
              57,
              49,
              56,
              49,
              50,
              51,
              53,
              54,
              51,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              97,
              52,
              54,
              56,
              49,
              56,
              48,
              50,
              45,
              56,
              102,
              53,
              49,
              45,
              52,
              98,
              100,
              49,
              45,
              57,
              97,
              102,
              100,
              45,
              57,
              55,
              97,
              57,
              49,
              56,
              49,
              50,
              51,
              53,
              54,
              51,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              49,
              48,
              99,
              101,
              51,
              48,
              98,
              45,
              50,
              49,
              100,
              52,
              45,
              52,
              48,
              52,
              99,
              45,
              98,
              52,
              54,
              102,
              45,
              52,
              57,
              51,
              56,
              54,
              50,
              56,
              54,
              54,
              53,
              100,
              52,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              49,
              48,
              99,
              101,
              51,
              48,
              98,
              45,
              50,
              49,
              100,
              52,
              45,
              52,
              48,
              52,
              99,
              45,
              98,
              52,
              54,
              102,
              45,
              52,
              57,
              51,
              56,
              54,
              50,
              56,
              54,
              54,
              53,
              100,
              52,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              51,
              101,
              52,
              53,
              50,
              101,
              98,
              48,
              45,
              56,
              49,
              102,
              99,
              45,
              52,
              49,
              55,
              52,
              45,
              97,
              97,
              56,
              55,
              45,
              52,
              99,
              54,
              55,
              98,
              99,
              51,
              49,
              98,
              51,
              101,
              49,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              51,
              101,
              52,
              53,
              50,
              101,
              98,
              48,
              45,
              56,
              49,
              102,
              99,
              45,
              52,
              49,
              55,
              52,
              45,
              97,
              97,
              56,
              55,
              45,
              52,
              99,
              54,
              55,
              98,
              99,
              51,
              49,
              98,
              51,
              101,
              49,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              55,
              97,
              55,
              52,
              54,
              52,
              102,
              45,
              54,
              56,
              102,
              99,
              45,
              52,
              52,
              101,
              98,
              45,
              57,
              102,
              55,
              100,
              45,
              55,
              57,
              48,
              97,
              54,
              101,
              100,
              54,
              52,
              97,
              101,
              97,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              49,
              55,
              97,
              55,
              52,
              54,
              52,
              102,
              45,
              54,
              56,
              102,
              99,
              45,
              52,
              52,
              101,
              98,
              45,
              57,
              102,
              55,
              100,
              45,
              55,
              57,
              48,
              97,
              54,
              101,
              100,
              54,
              52,
              97,
              101,
              97,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 27,
          "responseSize": 1288
        },
        "id": "a2e68b94-3f92-490d-9cc6-01f71d78093c"
      },
      {
        "cursor": {
          "ref": "8482b3d6-5180-4a06-8638-85325917aaa9",
          "length": 12,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c57dd881-7ff2-427e-b567-661b0ce25718"
        },
        "item": {
          "id": "23e65ae9-c4f3-496b-9737-0637705d2bbc",
          "name": "/Payment?href={{HREFPA01}}",
          "request": {
            "description": {
              "content": "This operation filter a Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [
                {
                  "key": "href",
                  "value": "{{HREFPA01}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d5bc736d-13fc-498e-acf8-140bbf132cd5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('IDPA02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('IDPA02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "01edfd10-e92e-4709-b660-5a0527035023"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "href",
                "value": "http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "15636a3c-56f9-48a4-b484-1efebde049b4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1389b059-cc83-4946-a796-4977848ba4e1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Result-Count",
              "value": "1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "315"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 21,
          "responseSize": 315
        },
        "id": "23e65ae9-c4f3-496b-9737-0637705d2bbc",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          },
          {
            "assertion": "id is 0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ced8cf27-78a1-478b-b305-c7fddccc3f41",
          "length": 12,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "199263cb-ec36-4d45-8310-b6e124c5fa87"
        },
        "item": {
          "id": "5881b31a-5dc2-474c-8e4b-62db08442b74",
          "name": "/Payment?href={{HREFPA02}}",
          "request": {
            "description": {
              "content": "This operation filter a Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [
                {
                  "key": "href",
                  "value": "{{HREFPA02}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6def80ac-42e8-4c85-a345-101118d7a4f4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('IDPA01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('IDPA01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "08df13c2-a5ad-4a3d-82e5-c720f8096610"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "href",
                "value": "http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7ec648b9-b1f4-4d69-b2e9-1eb0e1d7e616",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "cd28a105-e800-46b3-b2c4-49033f4f0c23",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Result-Count",
              "value": "1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "315"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 315
        },
        "id": "5881b31a-5dc2-474c-8e4b-62db08442b74",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          },
          {
            "assertion": "id is d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a955092b-db93-4658-bedf-1888601e98a8",
          "length": 12,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9cd96a0f-5082-4d27-ab8f-4d54bedd2b60"
        },
        "item": {
          "id": "bbabc159-1c9f-4cb9-bb58-d7f34336b2fe",
          "name": "/Payment?fields=id",
          "request": {
            "description": {
              "content": "This operation filter a Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [
                {
                  "key": "fields",
                  "value": "id"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5ac2bca1-bb85-4172-9a38-25b374927756",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "3af65554-25cf-40b7-9ea5-54212df74bb6"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "fields",
                "value": "id"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "07cdd382-9763-4efa-98f4-1077c1eb3f9a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "07d742b5-93b0-4b42-b4a0-eba9ccf930cc",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Result-Count",
              "value": "9"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:55 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "1288"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              56,
              55,
              54,
              55,
              101,
              100,
              45,
              97,
              50,
              98,
              48,
              45,
              52,
              49,
              54,
              55,
              45,
              97,
              48,
              102,
              99,
              45,
              55,
              100,
              101,
              53,
              100,
              100,
              48,
              56,
              54,
              101,
              100,
              55,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              54,
              55,
              56,
              55,
              54,
              55,
              101,
              100,
              45,
              97,
              50,
              98,
              48,
              45,
              52,
              49,
              54,
              55,
              45,
              97,
              48,
              102,
              99,
              45,
              55,
              100,
              101,
              53,
              100,
              100,
              48,
              56,
              54,
              101,
              100,
              55,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              99,
              49,
              50,
              48,
              50,
              51,
              51,
              50,
              45,
              101,
              55,
              102,
              56,
              45,
              52,
              102,
              55,
              101,
              45,
              56,
              56,
              56,
              56,
              45,
              53,
              52,
              100,
              99,
              53,
              97,
              49,
              55,
              53,
              52,
              54,
              102,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              99,
              49,
              50,
              48,
              50,
              51,
              51,
              50,
              45,
              101,
              55,
              102,
              56,
              45,
              52,
              102,
              55,
              101,
              45,
              56,
              56,
              56,
              56,
              45,
              53,
              52,
              100,
              99,
              53,
              97,
              49,
              55,
              53,
              52,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              102,
              57,
              53,
              57,
              100,
              52,
              45,
              98,
              54,
              101,
              99,
              45,
              52,
              53,
              48,
              100,
              45,
              56,
              50,
              51,
              98,
              45,
              97,
              97,
              50,
              52,
              99,
              100,
              52,
              99,
              54,
              98,
              53,
              54,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              53,
              54,
              102,
              57,
              53,
              57,
              100,
              52,
              45,
              98,
              54,
              101,
              99,
              45,
              52,
              53,
              48,
              100,
              45,
              56,
              50,
              51,
              98,
              45,
              97,
              97,
              50,
              52,
              99,
              100,
              52,
              99,
              54,
              98,
              53,
              54,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              52,
              54,
              56,
              49,
              56,
              48,
              50,
              45,
              56,
              102,
              53,
              49,
              45,
              52,
              98,
              100,
              49,
              45,
              57,
              97,
              102,
              100,
              45,
              57,
              55,
              97,
              57,
              49,
              56,
              49,
              50,
              51,
              53,
              54,
              51,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              97,
              52,
              54,
              56,
              49,
              56,
              48,
              50,
              45,
              56,
              102,
              53,
              49,
              45,
              52,
              98,
              100,
              49,
              45,
              57,
              97,
              102,
              100,
              45,
              57,
              55,
              97,
              57,
              49,
              56,
              49,
              50,
              51,
              53,
              54,
              51,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              49,
              48,
              99,
              101,
              51,
              48,
              98,
              45,
              50,
              49,
              100,
              52,
              45,
              52,
              48,
              52,
              99,
              45,
              98,
              52,
              54,
              102,
              45,
              52,
              57,
              51,
              56,
              54,
              50,
              56,
              54,
              54,
              53,
              100,
              52,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              49,
              48,
              99,
              101,
              51,
              48,
              98,
              45,
              50,
              49,
              100,
              52,
              45,
              52,
              48,
              52,
              99,
              45,
              98,
              52,
              54,
              102,
              45,
              52,
              57,
              51,
              56,
              54,
              50,
              56,
              54,
              54,
              53,
              100,
              52,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              51,
              101,
              52,
              53,
              50,
              101,
              98,
              48,
              45,
              56,
              49,
              102,
              99,
              45,
              52,
              49,
              55,
              52,
              45,
              97,
              97,
              56,
              55,
              45,
              52,
              99,
              54,
              55,
              98,
              99,
              51,
              49,
              98,
              51,
              101,
              49,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              51,
              101,
              52,
              53,
              50,
              101,
              98,
              48,
              45,
              56,
              49,
              102,
              99,
              45,
              52,
              49,
              55,
              52,
              45,
              97,
              97,
              56,
              55,
              45,
              52,
              99,
              54,
              55,
              98,
              99,
              51,
              49,
              98,
              51,
              101,
              49,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              55,
              97,
              55,
              52,
              54,
              52,
              102,
              45,
              54,
              56,
              102,
              99,
              45,
              52,
              52,
              101,
              98,
              45,
              57,
              102,
              55,
              100,
              45,
              55,
              57,
              48,
              97,
              54,
              101,
              100,
              54,
              52,
              97,
              101,
              97,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              49,
              55,
              97,
              55,
              52,
              54,
              52,
              102,
              45,
              54,
              56,
              102,
              99,
              45,
              52,
              52,
              101,
              98,
              45,
              57,
              102,
              55,
              100,
              45,
              55,
              57,
              48,
              97,
              54,
              101,
              100,
              54,
              52,
              97,
              101,
              97,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 29,
          "responseSize": 1288
        },
        "id": "bbabc159-1c9f-4cb9-bb58-d7f34336b2fe"
      },
      {
        "cursor": {
          "ref": "99e4df68-8b46-4ce2-9f36-683d96db70cd",
          "length": 12,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2b602fc0-a35d-4b9d-8400-c601ae361c6f"
        },
        "item": {
          "id": "ae7fb84e-e04c-4803-9757-c212a07a30e5",
          "name": "/Payment?id={{IDPA01}}",
          "request": {
            "description": {
              "content": "This operation filter a Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{IDPA01}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "adf0452d-4158-4d89-8bf6-b55f726990a2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('IDPA02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('IDPA02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "43c6809f-3358-4a81-83c5-81763af5cdfb"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "id",
                "value": "0f74aa54-6a42-411e-a823-205f7368c3fe"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c5de0bf0-673a-4f48-a92e-7de7d92bf513",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f328f491-cf20-44fb-a3e7-ce3a083c97cb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Result-Count",
              "value": "1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:56 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "315"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              48,
              102,
              55,
              52,
              97,
              97,
              53,
              52,
              45,
              54,
              97,
              52,
              50,
              45,
              52,
              49,
              49,
              101,
              45,
              97,
              56,
              50,
              51,
              45,
              50,
              48,
              53,
              102,
              55,
              51,
              54,
              56,
              99,
              51,
              102,
              101,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 315
        },
        "id": "ae7fb84e-e04c-4803-9757-c212a07a30e5",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          },
          {
            "assertion": "id is 0f74aa54-6a42-411e-a823-205f7368c3fe",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8b371fcb-916b-4203-9b2b-12a876165e27",
          "length": 12,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3253ae8a-251f-4f48-87d5-97cdb6ba7e67"
        },
        "item": {
          "id": "c96e3804-7088-4594-bf43-1eec4ec57888",
          "name": "/Payment?id={{IDPA02}}",
          "request": {
            "description": {
              "content": "This operation filter a Payment",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Payment}}payment"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{IDPA02}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d3fc6a7-9c67-40bf-83c0-b80ddda8cb87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('IDPA01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDPA02\")) {",
                  "            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDPA01\")) {",
                  "            pm.test('IDPA01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "5b2334da-04c0-4ae4-8e95-5dba47955fbe"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "id",
                "value": "d3bdc29c-7198-412f-bfce-1b3f0b6a69c0"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c681967d-c5ee-4641-867e-557d7c39e8d2",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "459f2c17-ee81-4c4e-a83f-d82e551c2129",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Result-Count",
              "value": "1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:56 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "315"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              53,
              52,
              54,
              51,
              49,
              53,
              49,
              34,
              125,
              44,
              34,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              125,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              65,
              109,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              54,
              55,
              54,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              47,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              47,
              100,
              51,
              98,
              100,
              99,
              50,
              57,
              99,
              45,
              55,
              49,
              57,
              56,
              45,
              52,
              49,
              50,
              102,
              45,
              98,
              102,
              99,
              101,
              45,
              49,
              98,
              51,
              102,
              48,
              98,
              54,
              97,
              54,
              57,
              99,
              48,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              116,
              109,
              102,
              54,
              55,
              54,
              45,
              112,
              97,
              121,
              109,
              101,
              110,
              116,
              45,
              118,
              52,
              46,
              109,
              121,
              98,
              108,
              117,
              101,
              109,
              105,
              120,
              46,
              110,
              101,
              116,
              47,
              100,
              111,
              99,
              115,
              47,
              35,
              47,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              64,
              98,
              97,
              115,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              121,
              109,
              101,
              110,
              116,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 15,
          "responseSize": 315
        },
        "id": "c96e3804-7088-4594-bf43-1eec4ec57888",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8676/paymentManagement/v4/payment/d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          },
          {
            "assertion": "id is d3bdc29c-7198-412f-bfce-1b3f0b6a69c0",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c38caead-35d1-4658-8ac7-f1777d45a4a6",
          "length": 12,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6dbe6e0c-91a6-4562-aac3-2127dcbd4b11"
        },
        "item": {
          "id": "c08003c1-b1ce-44f7-b156-af22ffd1e5b6",
          "name": "/Payment/404ID",
          "request": {
            "description": {
              "content": "This operation search for one of the created Payment",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "45d7aa75-8458-4b33-b659-c3c1d6278c4c"
              ],
              "host": [
                "{{Payment}}payment"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "83a03ba9-361d-4fe9-92c8-f0aae8587a4b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  ""
                ],
                "_lastExecutionId": "be6e7b5c-a932-451e-87e0-233af348607d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation search for one of the created Payment",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8676",
            "path": [
              "paymentManagement",
              "v4",
              "payment",
              "45d7aa75-8458-4b33-b659-c3c1d6278c4c"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6ba2123e-9b45-4ceb-b93f-bc47e8738898",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8676",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "11609539-b7c3-4868-ab00-969b5c3588e5",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Fri, 11 Dec 2020 14:30:56 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "85"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              54,
              48,
              44,
              34,
              114,
              101,
              97,
              115,
              111,
              110,
              34,
              58,
              34,
              82,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              78,
              111,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              105,
              116,
              104,
              32,
              103,
              105,
              118,
              101,
              110,
              32,
              105,
              100,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 85
        },
        "id": "c08003c1-b1ce-44f7-b156-af22ffd1e5b6",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 8000
    },
    "failures": [],
    "error": null
  }
}