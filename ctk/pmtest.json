{"info":{"_postman_id":"8223a975-cd07-41bb-ae5c-beb077e565ff","name":"CTK-Payment-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/Payment","event":[{"listen":"test","script":{"id":"0b98a4e4-ad66-4263-879f-57ee399abca5","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","pm.globals.set('HREFPA01', instance['href']);","pm.globals.set('IDPA01', instance['id']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"account\": {\n    \"id\": \"15463151\"\n  },\n  \"paymentMethod\": {},\n  \"totalAmount\": {}\n}"},"url":{"raw":"{{Payment}}payment","host":["{{Payment}}payment"]},"description":"This operation creates a Payment"},"response":[]},{"name":"/Payment","event":[{"listen":"test","script":{"id":"1585f5c7-fa07-4ce2-a0b6-15ba8746d24e","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","pm.globals.set('HREFPA02', instance['href']);","pm.globals.set('IDPA02', instance['id']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"account\": {\n    \"id\": \"15463151\"\n  },\n  \"paymentMethod\": {},\n  \"totalAmount\": {}\n}"},"url":{"raw":"{{Payment}}payment","host":["{{Payment}}payment"]},"description":"This operation creates another Payment"},"response":[]},{"name":"/Payment","event":[{"listen":"test","script":{"id":"eff13243-142f-41c4-b24c-05dc3a542b11","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment","host":["{{Payment}}payment"]},"description":"This operation search for the created Payment"},"response":[]},{"name":"/Payment/{{IDPA01}}","event":[{"listen":"test","script":{"id":"4911b136-3e1a-4e5b-b211-365f210ab6aa","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment/{{IDPA01}}","host":["{{Payment}}payment"],"path":["{{IDPA01}}"]},"description":"This operation search for one of the created Payment"},"response":[]},{"name":"/Payment/{{IDPA02}}","event":[{"listen":"test","script":{"id":"b9df3c1b-b42a-41e3-9bea-eba8d2fb0342","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment/{{IDPA02}}","host":["{{Payment}}payment"],"path":["{{IDPA02}}"]},"description":"This operation search for the other one of the created Payment"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/Payment?fields=href","event":[{"listen":"test","script":{"id":"b3c9c2c5-e5ed-4ab1-b948-918fb8c48ae6","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment?fields=href","host":["{{Payment}}payment"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a Payment"},"response":[]},{"name":"/Payment?href={{HREFPA01}}","event":[{"listen":"test","script":{"id":"d5bc736d-13fc-498e-acf8-140bbf132cd5","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment?href={{HREFPA01}}","host":["{{Payment}}payment"],"query":[{"key":"href","value":"{{HREFPA01}}"}]},"description":"This operation filter a Payment"},"response":[]},{"name":"/Payment?href={{HREFPA02}}","event":[{"listen":"test","script":{"id":"6def80ac-42e8-4c85-a345-101118d7a4f4","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment?href={{HREFPA02}}","host":["{{Payment}}payment"],"query":[{"key":"href","value":"{{HREFPA02}}"}]},"description":"This operation filter a Payment"},"response":[]},{"name":"/Payment?fields=id","event":[{"listen":"test","script":{"id":"5ac2bca1-bb85-4172-9a38-25b374927756","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment?fields=id","host":["{{Payment}}payment"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a Payment"},"response":[]},{"name":"/Payment?id={{IDPA01}}","event":[{"listen":"test","script":{"id":"adf0452d-4158-4d89-8bf6-b55f726990a2","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment?id={{IDPA01}}","host":["{{Payment}}payment"],"query":[{"key":"id","value":"{{IDPA01}}"}]},"description":"This operation filter a Payment"},"response":[]},{"name":"/Payment?id={{IDPA02}}","event":[{"listen":"test","script":{"id":"6d3fc6a7-9c67-40bf-83c0-b80ddda8cb87","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'account', 'href', 'id', 'paymentMethod', 'totalAmount'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment?id={{IDPA02}}","host":["{{Payment}}payment"],"query":[{"key":"id","value":"{{IDPA02}}"}]},"description":"This operation filter a Payment"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/Payment/404ID","event":[{"listen":"test","script":{"id":"83a03ba9-361d-4fe9-92c8-f0aae8587a4b","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Payment}}payment/45d7aa75-8458-4b33-b659-c3c1d6278c4c","host":["{{Payment}}payment"],"path":["45d7aa75-8458-4b33-b659-c3c1d6278c4c"]},"description":"This operation search for one of the created Payment"},"response":[]}],"protocolProfileBehavior":{}}],"protocolProfileBehavior":{}}